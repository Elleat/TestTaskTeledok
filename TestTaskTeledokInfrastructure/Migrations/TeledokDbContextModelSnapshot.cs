// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestTaskTeledokInfrastructure.Data;

#nullable disable

namespace TestTaskTeledokInfrastructure.Migrations
{
    [DbContext(typeof(TeledokDbContext))]
    partial class TeledokDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestTaskTeledokCore.Models.Clients", b =>
                {
                    b.Property<decimal>("ИНН")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("ДатаОбновления")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ДатаСоздания")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Наименование")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("ЮЛИП")
                        .HasColumnType("boolean");

                    b.HasKey("ИНН");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TestTaskTeledokCore.Models.ClientsFounders", b =>
                {
                    b.Property<decimal>("ИНН_Учредителя")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ИНН_Компании")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("ИНН_Учредителя");

                    b.HasIndex("ИНН_Компании")
                        .IsUnique();

                    b.ToTable("ClientsFounders");
                });

            modelBuilder.Entity("TestTaskTeledokCore.Models.Founders", b =>
                {
                    b.Property<decimal>("ИНН")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("ДатаОбновления")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ДатаСоздания")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ФИО")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ИНН");

                    b.ToTable("Founders");
                });

            modelBuilder.Entity("TestTaskTeledokCore.Models.ClientsFounders", b =>
                {
                    b.HasOne("TestTaskTeledokCore.Models.Clients", "Компании")
                        .WithOne("Учредители")
                        .HasForeignKey("TestTaskTeledokCore.Models.ClientsFounders", "ИНН_Компании")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTaskTeledokCore.Models.Founders", "Учредители")
                        .WithOne("Компании")
                        .HasForeignKey("TestTaskTeledokCore.Models.ClientsFounders", "ИНН_Учредителя")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Компании");

                    b.Navigation("Учредители");
                });

            modelBuilder.Entity("TestTaskTeledokCore.Models.Clients", b =>
                {
                    b.Navigation("Учредители")
                        .IsRequired();
                });

            modelBuilder.Entity("TestTaskTeledokCore.Models.Founders", b =>
                {
                    b.Navigation("Компании")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
